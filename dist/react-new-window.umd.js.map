{"version":3,"file":"react-new-window.umd.js","sources":["../src/NewWindow.js"],"sourcesContent":["'use strict'\n\n/**\n * Component dependencies.\n * @private\n */\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\n/**\n * The NewWindow class object.\n * @public\n */\n\nclass NewWindow extends React.PureComponent {\n\n  /**\n   * NewWindow default props.\n   */\n  static defaultProps = {\n    url: '',\n    name: '',\n    title: '',\n    features: {},\n    onBlock: null,\n    onUnload: null,\n    center: 'parent',\n    copyStyles: true,\n  }\n\n  /**\n   * The NewWindow function constructor.\n   * @param {Object} props\n   */\n  constructor(props) {\n    super(props)\n    this.container = document.createElement('div')\n    this.window = null\n    this.windowCheckerInterval = null\n    this.released = false\n  }\n\n  /**\n   * Render the NewWindow component.\n   */\n  render() {\n    return ReactDOM.createPortal(this.props.children, this.container)\n  }\n\n  /**\n   * Create the new window when NewWindow component mount.\n   */\n  componentDidMount() {\n    const { url, title, name, features, onBlock, center } = this.props\n\n    // Prepare position of the new window to be centered against the 'parent' window or 'screen'.\n    if (typeof center === 'string' && (features.width === undefined || features.height === undefined)) {\n      console.warn('width and height window features must be present when a center prop is provided')\n    } else if (center === 'parent') {\n      features.left = window.top.outerWidth / 2 + window.top.screenX - (features.width / 2)\n      features.top = window.top.outerHeight / 2 + window.top.screenY - (features.height / 2)\n    } else if (center === 'screen') {\n      const screenLeft = window.screenLeft !== undefined ? window.screenLeft : screen.left;\n      const screenTop = window.screenTop !== undefined ? window.screenTop : screen.top;\n\n      const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : screen.width;\n      const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : screen.height;\n\n      features.left = ((width / 2) - (features.width / 2)) + screenLeft;\n      features.top = ((height / 2) - (features.height / 2)) + screenTop;\n    }\n\n    // Open a new window.\n    this.window = window.open(url, name, toWindowFeatures(features))\n\n    // When a new window use content from a cross-origin there's no way we can attach event\n    // to it. Therefore, we need to detect in a interval when the new window was destroyed\n    // or was closed.\n    this.windowCheckerInterval = setInterval(() => {\n      if (!this.window || this.window.closed) {\n        this.release()\n      }\n    }, 50)\n\n    // Check if the new window was succesfully opened.\n    if (this.window) {\n      this.window.document.title = title\n      this.window.document.body.appendChild(this.container)\n\n      // If specified, copy styles from parent window's document.\n      if (this.props.copyStyles) {\n        copyStyles(document, this.window.document)\n      }\n\n      // Release anything bound to this component before the new window unload.\n      this.window.addEventListener('beforeunload', () => this.release())\n    } else {\n\n      // Handle error on opening of new window.\n      if (typeof onBlock === 'function') {\n        onBlock.call(null)\n      } else {\n        console.warn('A new window could not be opened. Maybe it was blocked.')\n      }\n    }\n  }\n\n  /**\n   * Close the opened window (if any) when NewWindow will unmount.\n   */\n  componentWillUnmount() {\n    if (this.window) {\n      this.window.close()\n    }\n  }\n\n  /**\n   * Release the new window and anything that was bound to it.\n   */\n  release() {\n    // This method can be called once.\n    if (this.released) {\n      return\n    }\n    this.released = true\n\n    // Remove checker interval.\n    clearInterval(this.windowCheckerInterval)\n\n    // Call any function bound to the `onUnload` prop.\n    const { onUnload } = this.props\n\n    if (typeof onUnload === 'function') {\n      onUnload.call(null)\n    }\n  }\n}\n\n/**\n * Utility functions.\n * @private\n */\n\n/**\n * Copy styles from a source document to a target.\n * @param {Object} source\n * @param {Object} target\n * @private\n */\n\nfunction copyStyles(source, target) {\n  Array.from(source.styleSheets).forEach(styleSheet => {\n\n    // For <style> elements\n    if (styleSheet.cssRules) {\n      const newStyleEl = source.createElement('style')\n\n      // Write the text of each rule into the body of the style element\n      Array.from(styleSheet.cssRules).forEach(cssRule => {\n        newStyleEl.appendChild(source.createTextNode(cssRule.cssText))\n      })\n\n      target.head.appendChild(newStyleEl)\n    }\n\n    // for <link> elements loading CSS from a URL\n    else if (styleSheet.href) {\n      const newLinkEl = source.createElement('link')\n\n      newLinkEl.rel = 'stylesheet'\n      newLinkEl.href = styleSheet.href\n      target.head.appendChild(newLinkEl)\n    }\n  })\n}\n\n/**\n * Convert features props to window features format (name=value,other=value).\n * @param {Object} obj\n * @return {String}\n * @private\n */\n\nfunction toWindowFeatures(obj) {\n  return Object.keys(obj)\n    .reduce((features, name) => {\n      let value = obj[name]\n      if (typeof value === 'boolean') {\n        features.push(`${name}=${value ? 'yes' : 'no'}`)\n      } else {\n        features.push(`${name}=${value}`)\n      }\n      return features\n    }, [])\n    .join(',')\n}\n\n/**\n * Component export.\n * @private\n */\n\nexport default NewWindow\n"],"names":["NewWindow","props","container","document","createElement","window","windowCheckerInterval","released","React","PureComponent","ReactDOM","createPortal","this","children","url","title","name","features","onBlock","center","undefined","width","height","left","top","outerWidth","screenX","outerHeight","screenY","screenLeft","screen","screenTop","innerWidth","documentElement","clientWidth","innerHeight","clientHeight","warn","open","obj","Object","keys","reduce","value","push","join","toWindowFeatures","setInterval","_this2","closed","release","body","appendChild","copyStyles","source","target","from","styleSheets","forEach","styleSheet","cssRules","newStyleEl","createTextNode","cssRule","cssText","head","href","newLinkEl","rel","addEventListener","call","close","onUnload","defaultProps"],"mappings":"g2BAeMA,yBAoBQC,4EACJA,aACDC,UAAYC,SAASC,cAAc,SACnCC,OAAS,OACTC,sBAAwB,OACxBC,UAAW,uUAzBIC,EAAMC,0DAgCnBC,EAASC,aAAaC,KAAKX,MAAMY,SAAUD,KAAKV,oEAOCU,KAAKX,MAArDa,IAAAA,IAAKC,IAAAA,MAAOC,IAAAA,KAAMC,IAAAA,SAAUC,IAAAA,QAASC,IAAAA,UAGvB,iBAAXA,QAA2CC,IAAnBH,EAASI,YAA2CD,IAApBH,EAASK,QAErE,GAAe,WAAXH,IACAI,KAAOlB,OAAOmB,IAAIC,WAAa,EAAIpB,OAAOmB,IAAIE,QAAWT,EAASI,MAAQ,IAC1EG,IAAMnB,OAAOmB,IAAIG,YAAc,EAAItB,OAAOmB,IAAII,QAAWX,EAASK,OAAS,OAC/E,GAAe,WAAXH,EAAqB,KACxBU,OAAmCT,IAAtBf,OAAOwB,WAA2BxB,OAAOwB,WAAaC,OAAOP,KAC1EQ,OAAiCX,IAArBf,OAAO0B,UAA0B1B,OAAO0B,UAAYD,OAAON,IAEvEH,EAAQhB,OAAO2B,WAAa3B,OAAO2B,WAAa7B,SAAS8B,gBAAgBC,YAAc/B,SAAS8B,gBAAgBC,YAAcJ,OAAOT,MACrIC,EAASjB,OAAO8B,YAAc9B,OAAO8B,YAAchC,SAAS8B,gBAAgBG,aAAejC,SAAS8B,gBAAgBG,aAAeN,OAAOR,SAEvIC,KAASF,EAAQ,EAAMJ,EAASI,MAAQ,EAAMQ,IAC9CL,IAAQF,EAAS,EAAML,EAASK,OAAS,EAAMS,gBAZhDM,KAAK,wFAgBVhC,OAASA,OAAOiC,KAAKxB,EAAKE,EA8GnC,SAA0BuB,UACjBC,OAAOC,KAAKF,GAChBG,OAAO,SAACzB,EAAUD,OACb2B,EAAQJ,EAAIvB,SACK,kBAAV2B,IACAC,KAAQ5B,OAAQ2B,EAAQ,MAAQ,SAEhCC,KAAQ5B,MAAQ2B,GAEpB1B,OAER4B,KAAK,KAzH+BC,CAAiB7B,SAKjDX,sBAAwByC,YAAY,WAClCC,EAAK3C,SAAU2C,EAAK3C,OAAO4C,UACzBC,WAEN,IAGCtC,KAAKP,aACFA,OAAOF,SAASY,MAAQA,OACxBV,OAAOF,SAASgD,KAAKC,YAAYxC,KAAKV,WAGvCU,KAAKX,MAAMoD,YA4DrB,SAAoBC,EAAQC,SACpBC,KAAKF,EAAOG,aAAaC,QAAQ,eAGjCC,EAAWC,SAAU,KACjBC,EAAaP,EAAOlD,cAAc,eAGlCoD,KAAKG,EAAWC,UAAUF,QAAQ,cAC3BN,YAAYE,EAAOQ,eAAeC,EAAQC,cAGhDC,KAAKb,YAAYS,QAIrB,GAAIF,EAAWO,KAAM,KAClBC,EAAYb,EAAOlD,cAAc,UAE7BgE,IAAM,eACNF,KAAOP,EAAWO,OACrBD,KAAKb,YAAYe,OAhFXhE,SAAUS,KAAKP,OAAOF,eAI9BE,OAAOgE,iBAAiB,eAAgB,kBAAMrB,EAAKE,aAIjC,mBAAZhC,IACDoD,KAAK,cAELjC,KAAK,0GASbzB,KAAKP,aACFA,OAAOkE,8CASV3D,KAAKL,eAGJA,UAAW,gBAGFK,KAAKN,2BAGXkE,EAAa5D,KAAKX,MAAlBuE,SAEgB,mBAAbA,KACAF,KAAK,uBAvHdtE,EAKGyE,kBACA,QACC,SACC,uBAEE,cACC,YACF,qBACI"}